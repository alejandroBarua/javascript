¿Qué es una API Rest?

API Rest significa utilizar una API para acceder a aplicaciones back-end, de manera que esa comunicación se realice con los estándares definidos por el estilo de arquitectura Rest.

Si creas aplicaciones web con JavaScript, las API REST probablemente serán la forma principal de obtener datos para tus aplicaciones, así como la de enviar datos hacia una base de datos.

Las principales solicitudes son:

POST (CREATE): crea datos en el servidor;
GET (READ): lectura de datos en el host;
PUT (UPDATE): actualiza los registros.
DELETE: borra la información;

Las restricciones determinadas por la arquitectura Rest son:

* Cliente-servidor: las aplicaciones existentes en el servidor y el cliente deben estar separadas.
* Sin estado: cada peticion recibida por el servidor se va a manejar de manera independiente, es decir, cada una ejecuta solo una determinada acción.
* Caché: la API debe utilizar la caché para evitar llamadas recurrentes al servidor.
...

cuando vamos a trabajar con una nueva API no nos intereza con que lenguaje crearon la API, solo nos intereza leer la documentacion para saber como consumir la informacion de la API para poder interactuar con los datos.


--------------------------------------------

para las practicas de API Rest necesito:

- instalar node js
- instalar JSON server para simular una API local
- instalar "insomnia" que es un cliente para hacer pruebas de APIs, tengo que hacer pruebas antes de empezar a programar para saber si el servidor responde, si estamos mandando los datos correctos para que salgan bien las peticiones.

1. abro la terminal y voy a la carpeta donde esta db.json

2. luego levanto el servidor:
$ json-server --watch db.json

Ctrl + c --> para detener el servidor

3. por defecto el JSON-server se levanta en el puerto 3000, y este puerto es usualmente utilizado por react, asi que podriamos cambiar el puerto del JSON-server:
$ json-server -w -p 5000 db.json

4. abro insomnia y creo una carpeta. luego hago un request para las peticion y le paso la direccion del json server a cada una y hago las pruebas a cada una.

